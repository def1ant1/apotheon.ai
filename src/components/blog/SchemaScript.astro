---
/* eslint-disable astro/no-set-html-directive -- Component sanitizes JSON-LD payloads before injecting them into the head. */
/**
 * Declarative wrapper for injecting structured data into the document head.
 * Accepts a single schema object or an array to minimize manual script tags.
 */
type StructuredSchema = Record<string, unknown>;

type Props = {
  schema: StructuredSchema | StructuredSchema[];
  type?: string;
};

const { schema, type = 'application/ld+json' } = Astro.props as Props;
const schemas = Array.isArray(schema) ? schema : [schema];
const inlineSchemaHtml = schemas
  .map((schemaItem) => JSON.stringify(schemaItem).replace(/</g, '\\u003C'))
  .map((payload) => `<script type="${type}">${payload}</script>`)
  .join('');
---

<Fragment set:html={inlineSchemaHtml} />

<!--
  Usage:
  ```astro
  <SchemaScript slot="head" schema={articleSchema} />
  ```
  Provide an array to `schema` when you need to emit Article + Breadcrumb data in one call.
-->
