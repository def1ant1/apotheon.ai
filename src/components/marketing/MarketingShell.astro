---
import BaseLayout from '../../layouts/BaseLayout.astro';

type Breadcrumb = {
  href: string;
  label: string;
};

interface Props {
  title: string;
  description?: string;
  breadcrumbs?: Breadcrumb[];
}

const { title, description, breadcrumbs = [] } = Astro.props as Props;

const normalizedTitle = `${title} | Apotheon.ai`;
const metaDescription =
  description ??
  'Composable marketing surfaces render statically for global performance while capturing enterprise-ready storytelling.';
---

{
  /*
  MarketingShell centralizes BaseLayout usage so every marketing page inherits consistent metadata,
  typography, and footer guidance. Authoring teams only pass high-level metadata while this shell
  handles canonical document order (breadcrumbs → hero → content → CTAs).
*/
}
<BaseLayout title={normalizedTitle} description={metaDescription}>
  <section class="mx-auto flex w-full max-w-5xl flex-col gap-12 px-6 pb-16">
    {
      breadcrumbs.length > 0 && (
        <nav
          aria-label="Breadcrumb"
          class="mt-6 text-xs uppercase tracking-[0.35rem] text-slate-400"
        >
          {/*
          Breadcrumb markup intentionally avoids client-side hydration. Screen readers benefit from a
          terse ordered list where the current page is an aria-current item. Future breadcrumb helpers
          can replace this markup while keeping the contract identical.
        */}
          <ol class="flex flex-wrap items-center gap-2">
            <li class="flex items-center gap-2">
              <a class="transition hover:text-white" href="/">
                Home
              </a>
              <span aria-hidden="true" class="text-slate-600">
                /
              </span>
            </li>
            {breadcrumbs.map((crumb, index) => (
              <li class="flex items-center gap-2">
                {index === breadcrumbs.length - 1 ? (
                  <span aria-current="page" class="font-semibold text-white">
                    {crumb.label}
                  </span>
                ) : (
                  <a class="transition hover:text-white" href={crumb.href}>
                    {crumb.label}
                  </a>
                )}
                {index !== breadcrumbs.length - 1 && (
                  <span aria-hidden="true" class="text-slate-600">
                    /
                  </span>
                )}
              </li>
            ))}
          </ol>
        </nav>
      )
    }

    {
      /*
      Content composers inject hero, article content, and CTAs as slot children. Keep slot usage in
      the same order across pages to preserve consistent scanning behavior for humans and crawlers.
    */
    }
    <div class="flex flex-col gap-12">
      <slot />
    </div>
  </section>
</BaseLayout>
