---
import type { IndustrySolutionReference, IndustrySolutionSummary } from './types';

interface Props {
  solutionMap: IndustrySolutionReference[];
  solutions: IndustrySolutionSummary[];
}

const { solutionMap, solutions } = Astro.props as Props;
const sectionId = 'industry-solution-map';
type SolutionSlug = IndustrySolutionSummary['slug'];

const solutionIndex = new Map<SolutionSlug, IndustrySolutionSummary>(
  solutions.map((solution) => [solution.slug, solution]),
);
---

<section
  id={sectionId}
  aria-labelledby={`${sectionId}-heading`}
  class="space-y-6 rounded-3xl border border-slate-800 bg-slate-950/60 p-8 shadow-lg ring-1 ring-slate-900/60"
  data-analytics-region="industry-solution-map"
>
  <!--
    Solution references stay server-rendered and auto-link into the solutions collection.
    We compute hrefs using the canonical slug so editors never have to duplicate URLs
    or worry about stale navigation paths.
  -->
  <header class="space-y-2">
    <h2 id={`${sectionId}-heading`} class="text-2xl font-semibold text-white md:text-3xl">
      Platform capabilities aligned to the mission
    </h2>
    <p class="text-base text-slate-300">
      Each recommendation cross-links to deep dives managed by the solutions team.
    </p>
  </header>

  <ul class="grid gap-6 md:grid-cols-3" data-testid="industry-solution-list">
    {
      solutionMap.map((item) => {
        const solutionSlug = item.slug as SolutionSlug;
        const solution = solutionIndex.get(solutionSlug);
        const href = `/solutions/${solutionSlug}/`;
        return (
          <li
            class="rounded-2xl border border-slate-800/80 bg-slate-900/50 p-6 shadow-inner"
            data-solution-slug={item.slug}
          >
            <div class="space-y-2">
              <p class="text-xs uppercase tracking-[0.3rem] text-indigo-300">Mapped solution</p>
              <h3 class="text-lg font-semibold text-white">
                {solution?.data.title ?? item.slug.replace(/-/g, ' ')}
              </h3>
            </div>
            <p class="mt-3 text-sm text-slate-300">{item.positioning}</p>
            {item.outcome ? (
              <p class="mt-3 text-sm font-semibold text-indigo-200">{item.outcome}</p>
            ) : null}
            <a
              class="mt-4 inline-flex items-center gap-2 text-sm font-semibold text-indigo-200 transition hover:text-indigo-100"
              href={href}
              aria-label={`Explore the ${solution?.data.title ?? item.slug} solution`}
            >
              Explore solution
              <span aria-hidden class="text-lg">
                â†’
              </span>
            </a>
          </li>
        );
      })
    }
  </ul>
</section>
