---
import type { IndustryUseCase } from './types';

interface Props {
  useCases: IndustryUseCase[];
}

const { useCases } = Astro.props as Props;
const sectionId = 'industry-use-cases';
---

<section
  id={sectionId}
  aria-labelledby={`${sectionId}-heading`}
  class="space-y-6 rounded-3xl border border-slate-800 bg-slate-950/60 p-8 shadow-lg ring-1 ring-slate-900/60"
  data-analytics-region="industry-use-cases"
>
  <!--
    Use cases render as a semantic definition list so personas and narratives stay
    linked for screen readers. No interactive controls are required, preserving
    the hydration-free philosophy that keeps the page lightweight.
  -->
  <header class="space-y-2">
    <h2 id={`${sectionId}-heading`} class="text-2xl font-semibold text-white md:text-3xl">
      Targeted use cases for cross-functional teams
    </h2>
    <p class="text-base text-slate-300">
      Designed to speak directly to the operators responsible for launching, governing, and scaling
      the platform.
    </p>
  </header>

  <dl class="grid gap-6 md:grid-cols-3" data-testid="industry-use-case-list">
    {
      useCases.map((useCase) => (
        <div class="rounded-2xl border border-slate-800/80 bg-slate-900/50 p-6 shadow-inner">
          <dt class="space-y-1">
            <p class="text-xs font-semibold uppercase tracking-[0.3rem] text-indigo-300">
              {useCase.persona}
            </p>
            <h3 class="text-lg font-semibold text-white">{useCase.title}</h3>
          </dt>
          <dd class="mt-3 space-y-2 text-sm text-slate-300">
            <p>{useCase.narrative}</p>
            {useCase.automationLevel ? (
              <p class="font-semibold text-indigo-200">
                Automation level: {useCase.automationLevel}
              </p>
            ) : null}
          </dd>
        </div>
      ))
    }
  </dl>
</section>
