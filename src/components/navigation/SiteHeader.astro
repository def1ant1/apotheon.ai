---
import { getValidatedNavigationGroups } from './navigationData';
import { getAvailableLocales, getDefaultLocale } from '../../i18n';
import { detectLocaleFromPath, useTranslations } from '../../i18n/runtime';
import { isLocaleQASwitcherEnabled } from '../../utils/featureFlags';
import LocaleSwitcher, { type LocaleSwitcherLabels } from '../islands/LocaleSwitcher';
import MobileNavigationDrawer from '../islands/MobileNavigationDrawer';
import PagefindSearch from '../islands/PagefindSearch';
import RadixNavigationMenu, { type NavigationMenuGroup } from '../islands/RadixNavigationMenu';

/**
 * Consolidated navigation data lives in `navigationData.ts`. Centralizing the lookup allows the
 * header, footer, Ladle stories, and any future surfaces to hydrate from a single validation
 * pipeline while still receiving strongly typed objects.
 */
const { t } = await useTranslations(Astro);
const sanitizedMenuGroups: ReadonlyArray<NavigationMenuGroup> =
  await getValidatedNavigationGroups(t);
const availableLocales = getAvailableLocales();
const defaultLocale = getDefaultLocale();
const currentLocale = detectLocaleFromPath?.(Astro.url.pathname) ?? defaultLocale;
const localeSwitcherEnabled = isLocaleQASwitcherEnabled();
const localeSwitcherLabels: LocaleSwitcherLabels = {
  ariaLabel: t('navigation.localeSwitcher.ariaLabel', {
    defaultValue: 'QA locale switcher for language verification',
  }),
  instructions: t('navigation.localeSwitcher.instructions', {
    defaultValue:
      'Focus to reveal QA-only locales. Production builds stay on the default language unless the QA flag is enabled.',
  }),
  statusCurrent: t('navigation.localeSwitcher.status.current', {
    defaultValue: 'Browsing the {{locale}} locale.',
  }),
  statusUpdated: t('navigation.localeSwitcher.status.updated', {
    defaultValue: 'Switching to {{locale}}â€¦',
  }),
  defaultLocaleSuffix: t('navigation.localeSwitcher.defaultLocaleSuffix', {
    defaultValue: 'default locale',
  }),
};
---

{
  /**
  The global header anchors the skip link, logo, and navigation landmarks. Explicitly declaring the
  banner role and aria label defends against regressions if we ever wrap the header in additional
  containers or port it into host frameworks that manipulate landmark semantics.
*/
}
<header
  role="banner"
  aria-label={t('navigation.aria.primaryHeader', { defaultValue: 'Primary site header' })}
  class="sticky top-0 z-40 flex justify-center bg-surface-base/70 px-gutter-inline pb-space-sm pt-space-xs backdrop-blur supports-[backdrop-filter]:bg-surface-base/60"
>
  <div class="flex w-full max-w-5xl flex-col gap-space-xs">
    {
      /**
      Keep the skip link as the first interactive element so assistive tech exposes it immediately.
      The target maps to `<main id="main" tabindex="-1">` declared in `BaseLayout`.
    */
    }
    <a class="sr-only focus:not-sr-only" href="#main">
      {t('navigation.skipLink', { defaultValue: 'Skip to content' })}
    </a>

    {
      /**
      QA can flip `PUBLIC_ENABLE_LOCALE_QA_SWITCHER` on during staging or
      ad-hoc verification runs to expose the otherwise hidden language
      selector. Leaving the feature flag off keeps production in the default
      locale while still letting us QA translated routes end-to-end without
      shipping experimental UI to customers.
    */
    }
    {
      localeSwitcherEnabled && (
        <LocaleSwitcher
          client:idle
          availableLocales={availableLocales}
          currentLocale={currentLocale}
          defaultLocale={defaultLocale}
          labels={localeSwitcherLabels}
          pathname={Astro.url.pathname}
        />
      )
    }

    <div class="flex items-start justify-between gap-space-xs">
      <div class="flex flex-col gap-space-3xs">
        <a
          href="/"
          class="text-title-sm font-black tracking-tight text-ink-primary transition hover:text-accent-brand"
        >
          {t('navigation.brand.name', { defaultValue: 'Apotheon.ai' })}
        </a>
        <p class="text-caption text-ink-muted sm:text-body-sm">
          {
            t('navigation.brand.tagline', {
              defaultValue: 'Automation-first GTM fabric for enterprise AI launches.',
            })
          }
        </p>
      </div>

      <div class="sm:hidden">
        <MobileNavigationDrawer client:idle groups={sanitizedMenuGroups} />
      </div>
    </div>

    <div class="hidden sm:block">
      {
        /**
        Keyboard navigation: the search island keeps focus within the input/results column. Tabbing from the
        input advances directly into the streaming list items without stealing focus back when Pagefind resolves
        additional matches. We document the behaviour inline so future refactors preserve the zero-jump contract.
      */
      }
      <PagefindSearch client:idle />
    </div>

    <div class="hidden sm:block">
      {
        /** Desktop navigation hydrates lazily; Radix still renders semantic `<nav aria-label="Primary">`. */
      }
      <RadixNavigationMenu client:idle groups={sanitizedMenuGroups} />
    </div>
  </div>
</header>
