---
import { getEntry } from 'astro:content';

import AiosPillars from '../components/homepage/AiosPillars.astro';
import DemoBanner from '../components/homepage/DemoBanner.astro';
import HomepageHero from '../components/homepage/HomepageHero.astro';
import IndustriesPreview from '../components/homepage/IndustriesPreview.astro';
import InvestorBanner from '../components/homepage/InvestorBanner.astro';
import PlatformBenefits from '../components/homepage/PlatformBenefits.astro';
import ProductModules from '../components/homepage/ProductModules.astro';
import LiveClock from '../components/islands/LiveClock';
import WelcomeTour from '../components/islands/WelcomeTour';
import {
  WELCOME_TOUR_EVENT_CHANNEL,
  WELCOME_TOUR_STORAGE_KEY,
} from '../components/islands/welcomeTour.constants';
import SchemaScript from '../components/seo/SchemaScript.astro';
import { homepageEntryId } from '../content/homepage';
import { useTranslations } from '../i18n/runtime';
import BaseLayout from '../layouts/BaseLayout.astro';
import {
  buildBreadcrumbSchema,
  buildOrganizationSchema,
  buildWebsiteSchema,
  resolveLocaleFromPath,
} from '../utils/seo';

const { t } = await useTranslations(Astro);
const homepageEntry = await getEntry('homepage', homepageEntryId);
const { Content: HeroDescription } = await homepageEntry.render();
const heroMetaDescription =
  homepageEntry.data.supportingBullets[0]?.description ??
  t('homepage.hero.metaFallback', {
    defaultValue: 'Operational intelligence for distributed Astro deployments.',
  });

const siteOrigin = Astro.site?.origin ?? Astro.url.origin;
const pageLocale = resolveLocaleFromPath(Astro.url.pathname) ?? 'en-US';
const seo = {
  title: homepageEntry.data.headline,
  description: heroMetaDescription,
  path: '/',
  locale: pageLocale,
  openGraph: {
    type: 'website',
    images: [
      {
        url: new URL('/static/logo/logo-white.png', siteOrigin).toString(),
        alt: 'Apotheon.ai logomark',
      },
    ],
  },
};

const organizationSchema = buildOrganizationSchema({
  url: siteOrigin,
  logo: new URL('/static/logo/logo-white-svg.svg', siteOrigin).toString(),
  sameAs: ['https://www.linkedin.com/company/apotheon-ai'],
  locale: pageLocale,
});
const websiteSchema = buildWebsiteSchema({
  url: siteOrigin,
  description: heroMetaDescription,
  locale: pageLocale,
});
const breadcrumbSchema = buildBreadcrumbSchema(
  [
    {
      label: t('navigation.primary.home', { defaultValue: 'Home' }),
      href: '/',
    },
  ],
  siteOrigin,
  pageLocale,
);

const foundationsFirstSegments = {
  intro: t('homepage.sections.composableFoundations.body.first.segments.intro', {
    defaultValue: 'Drop future MDX files into ',
  }),
  betweenPaths: t('homepage.sections.composableFoundations.body.first.segments.betweenPaths', {
    defaultValue: ' or ',
  }),
  afterMarketing: t('homepage.sections.composableFoundations.body.first.segments.afterMarketing', {
    defaultValue:
      ' and Astro will automatically type-check frontmatter, generate static pages, and refresh the Pagefind index as part of ',
  }),
  afterBuild: t('homepage.sections.composableFoundations.body.first.segments.afterBuild', {
    defaultValue: ' (rerun search only with ',
  }),
  outro: t('homepage.sections.composableFoundations.body.first.segments.outro', {
    defaultValue: ').',
  }),
};

const foundationsFirstTokens = {
  blogPath: t('homepage.sections.composableFoundations.body.first.tokens.blogPath', {
    defaultValue: 'src/content/blog',
  }),
  marketingPath: t('homepage.sections.composableFoundations.body.first.tokens.marketingPath', {
    defaultValue: 'src/content/marketing',
  }),
  buildCommand: t('homepage.sections.composableFoundations.body.first.tokens.buildCommand', {
    defaultValue: 'npm run build',
  }),
  searchCommand: t('homepage.sections.composableFoundations.body.first.tokens.searchCommand', {
    defaultValue: 'npm run search:index',
  }),
};

const foundationsSecondSegments = {
  intro: t('homepage.sections.composableFoundations.body.second.segments.intro', {
    defaultValue:
      'Tailwind CSS is wired via the official Astro integration, so design systems stay consistent without custom plumbing. Global CSS lives in ',
  }),
  afterStyles: t('homepage.sections.composableFoundations.body.second.segments.afterStyles', {
    defaultValue: ' and is imported once through ',
  }),
  outro: t('homepage.sections.composableFoundations.body.second.segments.outro', {
    defaultValue: '.',
  }),
};

const foundationsSecondTokens = {
  stylesPath: t('homepage.sections.composableFoundations.body.second.tokens.stylesPath', {
    defaultValue: 'src/styles/global.css',
  }),
  layoutFile: t('homepage.sections.composableFoundations.body.second.tokens.layoutFile', {
    defaultValue: 'BaseLayout.astro',
  }),
};

const foundationsThirdSegments = {
  intro: t('homepage.sections.composableFoundations.body.third.segments.intro', {
    defaultValue:
      'React islands remain fully supported for analytics widgets, onboarding flows, or other targeted interactivity. Hydrate them with any ',
  }),
  outro: t('homepage.sections.composableFoundations.body.third.segments.outro', {
    defaultValue: ' directive and keep the rest of the experience static-first.',
  }),
};

const foundationsThirdTokens = {
  directive: t('homepage.sections.composableFoundations.body.third.tokens.directive', {
    defaultValue: 'client:*',
  }),
};

const welcomeTourTitle = t('homepage.welcomeTour.title', {
  defaultValue: 'Command the Apotheon.ai control plane',
});
const welcomeTourDescription = t('homepage.welcomeTour.description', {
  defaultValue:
    'This guided walkthrough orients new operators around the navigation system, federated search, and documentation command center so onboarding never blocks delivery.',
});
const welcomeTourLabels = {
  close: t('homepage.welcomeTour.labels.close', { defaultValue: 'Close tour' }),
  next: t('homepage.welcomeTour.labels.next', { defaultValue: 'Next' }),
  previous: t('homepage.welcomeTour.labels.previous', { defaultValue: 'Back' }),
  skip: t('homepage.welcomeTour.labels.skip', { defaultValue: 'Skip tour' }),
  finish: t('homepage.welcomeTour.labels.finish', { defaultValue: 'Finish' }),
  progress: t('homepage.welcomeTour.labels.progress', {
    defaultValue: 'Step {{current}} of {{total}}',
  }),
  srLandmarkPrefix: t('homepage.welcomeTour.labels.srLandmarkPrefix', {
    defaultValue: 'Highlighting',
  }),
  srDialogAnnouncement: t('homepage.welcomeTour.labels.srDialogAnnouncement', {
    defaultValue:
      'Welcome tour opened. Use the Next button or arrow keys to move between highlights.',
  }),
};
const welcomeTourSteps = [
  {
    id: 'navigation',
    targetSelector: '[data-welcome-tour-target="primary-navigation"]',
    title: t('homepage.welcomeTour.steps.navigation.title', {
      defaultValue: 'Primary navigation',
    }),
    description: t('homepage.welcomeTour.steps.navigation.description', {
      defaultValue:
        'Every strategic surface lives hereâ€”hover to reveal fly-out panels that mirror the information architecture shipped with each release.',
    }),
  },
  {
    id: 'search',
    targetSelector: '[data-welcome-tour-target="global-search"]',
    title: t('homepage.welcomeTour.steps.search.title', {
      defaultValue: 'Federated search',
    }),
    description: t('homepage.welcomeTour.steps.search.description', {
      defaultValue:
        'Query the static handbook, MDX posts, and marketing surfaces in one place. Results hydrate instantly without leaving the header.',
    }),
  },
  {
    id: 'docs',
    targetSelector: '[data-welcome-tour-target="docs-hub"]',
    title: t('homepage.welcomeTour.steps.docs.title', {
      defaultValue: 'Documentation launchpad',
    }),
    description: t('homepage.welcomeTour.steps.docs.description', {
      defaultValue:
        'Jump into the living handbook for architecture decisions, runbooks, and IA maps. Analytics hooks trace every open so we know which playbooks resonate.',
    }),
  },
];
---

<BaseLayout {seo} locale={pageLocale}>
  <SchemaScript slot="head" schema={[organizationSchema, websiteSchema, breadcrumbSchema]} />
  <WelcomeTour
    client:idle
    title={welcomeTourTitle}
    description={welcomeTourDescription}
    steps={welcomeTourSteps}
    labels={welcomeTourLabels}
    storageKey={WELCOME_TOUR_STORAGE_KEY}
    eventChannel={WELCOME_TOUR_EVENT_CHANNEL}
    dataLayerEventName="welcome_tour"
  />
  <section class="flex flex-col gap-12" data-analytics-region="homepage-overview">
    <HomepageHero hero={homepageEntry.data}>
      <HeroDescription />
    </HomepageHero>

    {
      homepageEntry.data.pillars?.length ? (
        <AiosPillars
          heading={t('homepage.sections.pillars.heading', {
            defaultValue: 'AI Operating System pillars',
          })}
          description={t('homepage.sections.pillars.description', {
            defaultValue:
              'A north-star view of how Apotheon.ai hardens generative workflows for regulated enterprises. Order here flows downstream into sales collateral and onboarding runbooks.',
          })}
          pillars={homepageEntry.data.pillars}
        />
      ) : null
    }

    {
      homepageEntry.data.modules?.length ? (
        <ProductModules
          heading={t('homepage.sections.modules.heading', {
            defaultValue: 'Product modules ready for deployment',
          })}
          description={t('homepage.sections.modules.description', {
            defaultValue:
              'Each module maps one-to-one with our solutions IA. Keep slugs aligned with /solutions routes so navigation, analytics, and Pagefind stay in lockstep.',
          })}
          modules={homepageEntry.data.modules}
        />
      ) : null
    }

    {
      homepageEntry.data.benefits?.length ? (
        <PlatformBenefits benefits={homepageEntry.data.benefits} />
      ) : null
    }

    <InvestorBanner banner={homepageEntry.data.ctaBanners.investor} />
    <DemoBanner banner={homepageEntry.data.ctaBanners.demo} />

    <!--
      Industries preview pulls directly from src/content/industries via the shared
      collection helper. Editors update MDX entries and this block refreshes automatically on
      the next build, keeping homepage messaging aligned with the dedicated /industries/ IA.
    -->
    <IndustriesPreview overrides={homepageEntry.data.industriesPreview ?? null} />

    <article class="grid gap-12 lg:grid-cols-[2fr,1fr]" data-analytics-block="homepage-foundations">
      <div class="space-y-6">
        <h2 class="text-2xl font-semibold text-white">
          {
            t('homepage.sections.composableFoundations.heading', {
              defaultValue: 'Composable foundations',
            })
          }
        </h2>
        <p class="text-base text-slate-300">
          {foundationsFirstSegments.intro}
          <code>{foundationsFirstTokens.blogPath}</code>
          {foundationsFirstSegments.betweenPaths}
          <code>{foundationsFirstTokens.marketingPath}</code>
          {foundationsFirstSegments.afterMarketing}
          <code>{foundationsFirstTokens.buildCommand}</code>
          {foundationsFirstSegments.afterBuild}
          <code>{foundationsFirstTokens.searchCommand}</code>
          {foundationsFirstSegments.outro}
        </p>
        <p class="text-base text-slate-300">
          {foundationsSecondSegments.intro}
          <code>{foundationsSecondTokens.stylesPath}</code>
          {foundationsSecondSegments.afterStyles}
          <code>{foundationsSecondTokens.layoutFile}</code>
          {foundationsSecondSegments.outro}
        </p>
        <p class="text-base text-slate-300">
          {foundationsThirdSegments.intro}
          <code>{foundationsThirdTokens.directive}</code>
          {foundationsThirdSegments.outro}
        </p>
      </div>
      <!-- Live clock hydration can wait until the component scrolls into view; analytics and demos track the same behavior while protecting LCP. -->
      <LiveClock client:visible />
    </article>
  </section>
</BaseLayout>
