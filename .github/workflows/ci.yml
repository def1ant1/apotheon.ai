name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

env:
  FORCE_COLOR: '1'
  NODE_ENV: 'test'

jobs:
  quality-gates:
    name: Node ${{ matrix.node }}
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        node: ['18.x', '20.x']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Backup automation dry-run
        run: npm run ops:backup:dry-run

      - name: Run linting
        run: npm run lint

      - name: Upload link audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: link-audit-${{ matrix.node }}
          path: artifacts/link-check/report.json
          if-no-files-found: ignore
          retention-days: 14

      - name: Type check
        run: npm run typecheck

      - name: Synthetic health dry-run
        run: npm run workers:synthetic:dry-run

      - name: Analytics proxy unit tests
        run: npm run test:analytics-proxy

      - name: Execute test suite
        run: npm run test

      - name: Prepare Playwright fixtures
        run: |
          rm -rf artifacts/playwright
          mkdir -p artifacts/playwright
          npm run pretest:e2e

      - name: Playwright - chromium mobile
        run: |
          set -euo pipefail
          export PLAYWRIGHT_HTML_REPORT=artifacts/playwright/html-report/chromium-mobile
          export PLAYWRIGHT_JSON_OUTPUT_NAME=artifacts/playwright/report-chromium-mobile.json
          npx playwright test --max-failures=1 --project=chromium-mobile --output=artifacts/playwright/test-results/chromium-mobile

      - name: Playwright - chromium desktop (light)
        run: |
          set -euo pipefail
          export PLAYWRIGHT_HTML_REPORT=artifacts/playwright/html-report/chromium-desktop-light
          export PLAYWRIGHT_JSON_OUTPUT_NAME=artifacts/playwright/report-chromium-desktop-light.json
          npx playwright test --max-failures=1 --project=chromium-desktop-light --output=artifacts/playwright/test-results/chromium-desktop-light

      - name: Playwright - chromium desktop (dark)
        run: |
          set -euo pipefail
          export PLAYWRIGHT_HTML_REPORT=artifacts/playwright/html-report/chromium-desktop-dark
          export PLAYWRIGHT_JSON_OUTPUT_NAME=artifacts/playwright/report-chromium-desktop-dark.json
          npx playwright test --max-failures=1 --project=chromium-desktop-dark --output=artifacts/playwright/test-results/chromium-desktop-dark

      - name: Collate Playwright diff manifests
        if: always()
        run: node ./scripts/ci/collect-playwright-diffs.mjs artifacts/playwright

      - name: Upload Playwright reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-reports-${{ matrix.node }}
          path: |
            artifacts/playwright/html-report
            artifacts/playwright/report-*.json
          retention-days: 14

      - name: Upload Playwright diffs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-diffs-${{ matrix.node }}
          path: |
            artifacts/playwright/diffs
            artifacts/playwright/test-results
          retention-days: 14

      - name: axe-core accessibility audit
        run: npm run accessibility:axe

      - name: Pa11y accessibility audit
        run: npm run accessibility:pa11y

      - name: Build project
        run: npm run build

      - name: Build Ladle stories
        run: npm run ladle:build

      - name: Build Pagefind index
        if: matrix.node == '20.x'
        run: npm run pagefind:index

      - name: Upload Pagefind artifacts
        if: always() && matrix.node == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: pagefind-index
          path: |
            dist/pagefind
            dist/**/*.html
            dist/.compressed-manifest.json
          retention-days: 14

      - name: Lighthouse budget enforcement
        if: matrix.node == '20.x'
        run: npm run lighthouse:ci

      - name: Upload Lighthouse results
        if: always() && matrix.node == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: artifacts/lighthouse
          retention-days: 14

      - name: OWASP ZAP baseline scan
        if: matrix.node == '20.x'
        run: npm run zap:baseline

      - name: Upload ZAP artifacts
        if: always() && matrix.node == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: zap-baseline
          path: artifacts/security/zap
          retention-days: 14

      - name: Secret scanning with Gitleaks
        if: matrix.node == '20.x'
        run: npm run gitleaks:ci

      - name: Upload Gitleaks report
        if: always() && matrix.node == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: artifacts/security/gitleaks/report.json
          retention-days: 14
  deploy-workers:
    name: Deploy Workers
    needs: quality-gates
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Backup automation dry-run
        run: npm run ops:backup:dry-run

      - name: Prepare OG manifest
        run: npm run ensure:og-assets

      - name: Lint
        run: npm run lint

      - name: Type check
        run: npm run typecheck

      - name: Synthetic health dry-run
        run: npm run workers:synthetic:dry-run

      - name: Run test suite
        run: npm run test

      - name: Run Playwright tests
        run: npm run test:e2e

      - name: axe-core accessibility audit
        run: npm run accessibility:axe

      - name: Pa11y accessibility audit
        run: npm run accessibility:pa11y

      - name: Build static site
        run: npm run build

      - name: Build Ladle stories
        run: npm run ladle:build

      - name: Deploy via Wrangler
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --config wrangler.toml
